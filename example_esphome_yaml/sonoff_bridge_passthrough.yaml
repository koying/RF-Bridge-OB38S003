# for use with the Sonoff v2.2 Radio to Wifi Bridge
# modified using this firmware for the microcontroller
# https://github.com/mightymos/RF-Bridge-OB38S003
# or by hardware modification

esphome:
  name: rf-bridge
  
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true
  
esp8266:
  # sonoff r2 v2.2
  board: esp8285
  # wemos v4
  #board: d1_mini

# use this instead of esp8266 if hardware is a generic esp32 board combined with a receiver module
# correct pin definitions below as appropriate
#esp32:
#  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # do we want this seems to be bad downsides for distant APs?
  fast_connect: false

# Enable logging
logger:
  # this is default apparently
  level: DEBUG
  
  # Sonoff R2 v2.2, in other words the LOG pin on J2 connector
  # FIXME: what about dev kit board?
  hardware_uart: UART1
  
  # disable logging
  #baud_rate: 0
  

# Enable over-the-air updates.
ota:
  safe_mode: true
  password: !secret ota_password
  
# Enable Home Assistant API
api:
  password: !secret api_password


status_led:
  # see sonoff_r2v2.2_connector_pinouts_fv1.txt for pin information
  pin: GPIO13
#  
# # Wemos D1 mini v4 (but conflicts with UART1 TX logging output)
# pin: GPIO2

web_server:
  port: 80
  
  # we do not authenticate web server so disable over the air updates
  ota: false
  local: true
  

# FIXME: add comment
remote_receiver:
  pin:
    # sonoff and wemos board
    number: GPIO3
    mode:
      input: true
      pullup: false
      
  # suggested on github
  tolerance: 60%
  filter: 4us
  idle: 4ms
  
  # 
  dump: rc_switch

  
# FIXME: add comment
remote_transmitter:
  # sonoff and wemos board
  pin: GPIO1

  # Set this to 50% if youâ€™re working with IR LEDs and to 100% if working with other things like 433MHz transmitters
  carrier_duty_percent: 100%


switch:
  - platform: template
    name: RF Transmit Button
    optimistic: true
    turn_on_action:
      - remote_transmitter.transmit_rc_switch_raw:
          code: '111111111111111100000100'
          protocol: 1
          repeat:
            times: 8
            wait_time: 30ms 
            
#binary_sensor:
#
# bench sensor
#  - platform: remote_receiver
#    name: "door open"
#    internal: true
#    rc_switch_raw:
#      code: '001101010111001000001010'
#       # model 101
#      code: '010010101111000100001010'
#    on_press:
#      then:
#        - binary_sensor.template.publish:
#            id: bench_sensor
#            state: ON
#            
#  - platform: remote_receiver
#    name: "door close"
#    internal: true
#    rc_switch_raw:
#      code: '001101010111001000001110'
#       # model 101
#      #code: '010010101111000100001110'
#    on_press:
#      then:
#        - binary_sensor.template.publish:
#            id: bench_sensor
#            state: OFF
#
#  - platform: template
#    name: "Bench Sensor"
#    id: bench_sensor
#    device_class: door
#    publish_initial_state : true
    